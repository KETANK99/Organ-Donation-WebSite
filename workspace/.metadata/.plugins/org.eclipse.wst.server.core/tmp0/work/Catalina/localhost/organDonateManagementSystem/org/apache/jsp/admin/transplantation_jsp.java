/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-06-04 13:10:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import DB.Dbconnection;
import java.sql.PreparedStatement;

public final class transplantation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("DB.Dbconnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp", out, false);
      out.write("\r\n");
      out.write("    <body class=\"dark-sidenav\">\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("	   <div class=\"page-wrapper\">\r\n");
      out.write("	   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topbar.jsp", out, false);
      out.write("\r\n");
      out.write("	   \r\n");
      out.write("	   ");

	   Dbconnection.getCon();
	   
      out.write("\r\n");
      out.write("	 \r\n");
      out.write("	      <div class=\"row my-5\">\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <div class=\"card\">\r\n");
      out.write("                                <div class=\"card-header\">\r\n");
      out.write("                                    <h4 class=\"card-title\">Transplantation List</h4>\r\n");
      out.write("                                </div><!--end card-header-->\r\n");
      out.write("                                <div class=\"card-body\">\r\n");
      out.write("                                    <div class=\"table-rep-plugin\">\r\n");
      out.write("                                        <div class=\"table-responsive mb-0\" data-pattern=\"priority-columns\">\r\n");
      out.write("                                            <table id=\"tech-companies-1\" class=\"table table-striped mb-0\">\r\n");
      out.write("                                                <thead>\r\n");
      out.write("                                                <tr>\r\n");
      out.write("                                                	<th>Sr.No</th>\r\n");
      out.write("                                                    <th>Recipient Name</th>\r\n");
      out.write("                                                    <th data-priority=\"1\">Contact No</th>\r\n");
      out.write("                                                    <th>Donor Name</th>\r\n");
      out.write("                                                    <th data-priority=\"1\">Contact No</th>\r\n");
      out.write("                                                    <th>Guardian Name</th>\r\n");
      out.write("                                                    <th data-priority=\"1\">Contact No</th>\r\n");
      out.write("                                                    <th>Transplantation Location</th>\r\n");
      out.write("                                                    <th>Transplantation date</th>\r\n");
      out.write("                                                    <th>Transplantation status</th>\r\n");
      out.write("                                                </tr>\r\n");
      out.write("                                                </thead>\r\n");
      out.write("                                                <tbody>\r\n");
      out.write("                                                ");

                                                String query=(request.getParameter("id")==null)?"select r.Recipient_name,r.Recipient_contact,d.donor_name,d.donor_contact,do.gaurdian_name,do.gaurdian_contact,t.transplantation_location,t.transplantation_date,t.status from transplantation as t inner join donation as do on t.donation_id=do.donation_id inner join donor as d on d.donor_id=do.donor_id inner join organ as o on o.organ_id=do.organ_id inner join recipient as r on t.recipient_id=r.Recipient_id"
                                                		:"select r.Recipient_name,r.Recipient_contact,d.donor_name,d.donor_contact,do.gaurdian_name,do.gaurdian_contact,t.transplantation_location,t.transplantation_date,t.status from transplantation as t inner join donation as do on t.donation_id=do.donation_id inner join donor as d on d.donor_id=do.donor_id inner join organ as o on o.organ_id=do.organ_id inner join recipient as r on t.recipient_id=r.Recipient_id where t.status=?";
                                               
                                                PreparedStatement ps=Dbconnection.con.prepareStatement(query);
                                                if (request.getParameter("id")!=null)
                                                ps.setString(1,request.getParameter("id"));
                                              	ResultSet rs=ps.executeQuery();
                                              	int i=0;
                                              	while(rs.next()){
                                                
      out.write("\r\n");
      out.write("                                                 <tr>\r\n");
      out.write("                                                    <td>");
      out.print(++i);
      out.write("</th>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("Recipient_name"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("Recipient_contact"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("donor_name"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("donor_contact"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("gaurdian_name"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("gaurdian_contact"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("transplantation_location"));
      out.write("</td>\r\n");
      out.write("                                                    <td>");
      out.print(rs.getString("transplantation_date"));
      out.write("</td>\r\n");
      out.write("                                                    <td>\r\n");
      out.write("                                                    \r\n");
      out.write("                                                    <span class=\"badge shadow bg-");
      out.print((rs.getString("status")!=null && rs.getString("status").equals("Pending"))?"warning":
                                                    		(rs.getString("status")!=null && rs.getString("status").equals("Approved"))?"success":
                                                    		(rs.getString("status")!=null && rs.getString("status").equals("Rejected"))?"danger":"");
      out.write('"');
      out.write('>');
      out.print(rs.getString("status"));
      out.write("</span>\r\n");
      out.write("                                                    \r\n");
      out.write("                                                    \r\n");
      out.write("                                                    </td>\r\n");
      out.write("                                                   \r\n");
      out.write("                                                </tr>\r\n");
      out.write("                                                ");
} 
      out.write("\r\n");
      out.write("                                             </tbody>\r\n");
      out.write("                                            </table>\r\n");
      out.write("                                        </div>    \r\n");
      out.write("                                    </div>    \r\n");
      out.write("                                </div><!--end card-body-->\r\n");
      out.write("                            </div><!--end card-->\r\n");
      out.write("                        </div> <!-- end col -->\r\n");
      out.write("                    </div> <!-- end row -->\r\n");
      out.write("	   \r\n");
      out.write("	   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("	   </div>\r\n");
      out.write("	   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "assetLinks.jsp", out, false);
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
