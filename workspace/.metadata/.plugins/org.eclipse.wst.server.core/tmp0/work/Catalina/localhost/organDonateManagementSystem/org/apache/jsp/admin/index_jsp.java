/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-06-04 13:07:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import DB.Dbconnection;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("DB.Dbconnection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "head.jsp", out, false);
      out.write("\r\n");
      out.write("<body class=\"dark-sidenav\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"page-wrapper\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "topbar.jsp", out, false);
      out.write("\r\n");
      out.write("		");

		Dbconnection.getCon();
		PreparedStatement ps = null;
		ResultSet rs = null;
		
      out.write("\r\n");
      out.write("		<div class=\"page-content\">\r\n");
      out.write("			<div class=\"container-fluid\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("			<h3>Donated Organs info</h3>\r\n");
      out.write("			");

			ps=Dbconnection.con.prepareStatement("select  do.organ_id, o.organ_name, count(do.organ_id) as count from donation do inner join organ as o on do.organ_id=o.organ_id inner join donor as d on do.donor_id=d.donor_id where d.status='active' group by do.organ_id");
			String[]  color={"primary","success","warning","info","danger"};
			rs=ps.executeQuery();
			int j=0;
			while(rs.next()){
				j=(j==4)?0:j+1;
			
      out.write("\r\n");
      out.write("			<div class=\"col p-2\">\r\n");
      out.write("			\r\n");
      out.write("				<div class=\"card shadow py-0 px-0 text-center text-white bg-");
      out.print(color[j]);
      out.write(" text-white \">\r\n");
      out.write("				<a href=\"donationList.jsp?id=");
      out.print(rs.getString(1));
      out.write("\">\r\n");
      out.write("					<p class=\"mt-3 mb-0 h4 text-white fw-bold\">");
      out.print(rs.getString("organ_name") );
      out.write("</p>\r\n");
      out.write("					<i class=\"h4 fas fa-briefcase-medical text-white\"></i>\r\n");
      out.write("					<p class=\"h3 text-bold text-white my-0 py-0\">");
      out.print(rs.getString("count") );
      out.write("</p>\r\n");
      out.write("				</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			");

			
			
			} 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("				<!-- Page-Title -->\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-lg-12\">\r\n");
      out.write("						<div class=\"card\">\r\n");
      out.write("							<div class=\"card-header\">\r\n");
      out.write("								<div class=\"row align-items-center\">\r\n");
      out.write("									<div class=\"col\">\r\n");
      out.write("										<h4 class=\"card-title\">Donor's List (Recently Added) </h4>\r\n");
      out.write("									</div>\r\n");
      out.write("									<!--end col-->\r\n");
      out.write("								</div>\r\n");
      out.write("								<!--end row-->\r\n");
      out.write("							</div>\r\n");
      out.write("							<!--end card-header-->\r\n");
      out.write("							<div class=\"card-body\">\r\n");
      out.write("								<div class=\"table-responsive\">\r\n");
      out.write("									<table class=\"table mb-0\">\r\n");
      out.write("										<thead class=\"table-light\">\r\n");
      out.write("											<tr>\r\n");
      out.write("												<th>Sr.No</th>\r\n");
      out.write("												<th>Donor Name</th>\r\n");
      out.write("												<th data-priority=\"1\">Mobile No</th>\r\n");
      out.write("												<th data-priority=\"2\">Email Id</th>\r\n");
      out.write("												<th data-priority=\"3\">Blood Group</th>\r\n");
      out.write("												<th data-priority=\"1\">Date of Birth</th>\r\n");
      out.write("												<th data-priority=\"1\">Age</th>\r\n");
      out.write("											</tr>\r\n");
      out.write("											<!--end tr-->\r\n");
      out.write("										</thead>\r\n");
      out.write("										<tbody>\r\n");
      out.write("											");

											ps = Dbconnection.con.prepareStatement(
													"select b.BloodGroupName,d.*,FLOOR((TIMESTAMPDIFF(MONTH, d.donor_dob, CURDATE()) / 12)) as Age from donor as d inner join bloodgroups as b on d.blood_category=b.id order by d.donor_id desc limit 10");
											rs = ps.executeQuery();
											int i = 0;
											while (rs.next()) {
											
      out.write("\r\n");
      out.write("											<tr>\r\n");
      out.write("												<td>");
      out.print(++i);
      out.write("</td>\r\n");
      out.write("												<td>");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString(7));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"2\">");
      out.print(rs.getString(6));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"3\">");
      out.print(rs.getString(1));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString("Age"));
      out.write("</td>\r\n");
      out.write("											</tr>\r\n");
      out.write("											");

											}
											
      out.write("\r\n");
      out.write("										</tbody>\r\n");
      out.write("									</table>\r\n");
      out.write("									<!--end table-->\r\n");
      out.write("								</div>\r\n");
      out.write("								<!--end /div-->\r\n");
      out.write("							</div>\r\n");
      out.write("							<!--end card-body-->\r\n");
      out.write("						</div>\r\n");
      out.write("						<!--end card-->\r\n");
      out.write("					</div>\r\n");
      out.write("					<!--end col-->\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-lg-12\">\r\n");
      out.write("						<div class=\"card\">\r\n");
      out.write("							<div class=\"card-header\">\r\n");
      out.write("								<div class=\"row align-items-center\">\r\n");
      out.write("									<div class=\"col\">\r\n");
      out.write("										<h4 class=\"card-title\">Recipient's List (Recently Added)</h4>\r\n");
      out.write("									</div>\r\n");
      out.write("									<!--end col-->\r\n");
      out.write("								</div>\r\n");
      out.write("								<!--end row-->\r\n");
      out.write("							</div>\r\n");
      out.write("							<!--end card-header-->\r\n");
      out.write("							<div class=\"card-body\">\r\n");
      out.write("								<div class=\"table-responsive\">\r\n");
      out.write("									<table class=\"table mb-0\">\r\n");
      out.write("										<thead class=\"table-light\">\r\n");
      out.write("											<tr>\r\n");
      out.write("												<th>Sr.No</th>\r\n");
      out.write("												<th>Donor Name</th>\r\n");
      out.write("												<th data-priority=\"1\">Mobile No</th>\r\n");
      out.write("												<th data-priority=\"2\">Email Id</th>\r\n");
      out.write("												<th data-priority=\"3\">Blood Group</th>\r\n");
      out.write("												<th data-priority=\"1\">Date of Birth</th>\r\n");
      out.write("												<th data-priority=\"1\">Age</th>\r\n");
      out.write("											</tr>\r\n");
      out.write("											<!--end tr-->\r\n");
      out.write("										</thead>\r\n");
      out.write("										<tbody>\r\n");
      out.write("											");

											 ps=Dbconnection.con.prepareStatement("select b.BloodGroupName,r.*,FLOOR((TIMESTAMPDIFF(MONTH, r.Recipient_dob, CURDATE()) / 12)) as Age from Recipient as r inner join bloodgroups as b on r.blood_category=b.id order by r.Recipient_id desc limit 15");
                                            rs=ps.executeQuery();
                                          	 i=0;
											while (rs.next()) {
											
      out.write("\r\n");
      out.write("											<tr>\r\n");
      out.write("												<td>");
      out.print(++i);
      out.write("\r\n");
      out.write("												</th>\r\n");
      out.write("												<td>");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString(7));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"2\">");
      out.print(rs.getString(6));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"3\">");
      out.print(rs.getString(1));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("												<td data-priority=\"1\">");
      out.print(rs.getString("Age"));
      out.write("</td>\r\n");
      out.write("											</tr>\r\n");
      out.write("											");

												}
											
      out.write("\r\n");
      out.write("										</tbody>\r\n");
      out.write("									</table>\r\n");
      out.write("									<!--end table-->\r\n");
      out.write("								</div>\r\n");
      out.write("								<!--end /div-->\r\n");
      out.write("							</div>\r\n");
      out.write("							<!--end card-body-->\r\n");
      out.write("						</div>\r\n");
      out.write("						<!--end card-->\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					<!--end col-->\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "assetLinks.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
